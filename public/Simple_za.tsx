/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder003: THREE.Mesh
    Cylinder003_1: THREE.Mesh
  }
  materials: {
    za_COLOR: THREE.MeshStandardMaterial
    pep_COLOR: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/simple_za.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0.14, -0.19, 0.23]} rotation={[0, -Math.PI / 2, 0]} scale={[1.23, 1.23, 1.23]}>
        <mesh geometry={nodes.Cylinder003.geometry} material={materials.za_COLOR} />
        <mesh geometry={nodes.Cylinder003_1.geometry} material={materials.pep_COLOR} />
      </group>
    </group>
  )
}

useGLTF.preload('/simple_za.glb')
